{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Faisal\\\\Desktop\\\\fullstack Projects\\\\Diary Software\\\\my-frontend\\\\src\\\\LoginForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './LoginForm.css'; // Make sure the path is correct\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction LoginForm(_ref) {\n  _s();\n\n  let {\n    onLogin\n  } = _ref;\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [showAlert, setShowAlert] = useState(false);\n  const navigate = useNavigate();\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const storedUsername = process.env.REACT_APP_USERNAME;\n    const storedPassword = process.env.REACT_APP_PASSWORD;\n\n    if (username === storedUsername && password === storedPassword) {\n      onLogin();\n      navigate('/');\n    } else {\n      setShowAlert(true);\n      setTimeout(() => setShowAlert(false), 3000); // Hide the alert after 3 seconds\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"background-text\",\n      children: \"Maher Dairy Farm\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-form-card\",\n      children: [showAlert && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert-message show\",\n        children: \"Incorrect username or password!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"login-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: username,\n          onChange: e => setUsername(e.target.value),\n          placeholder: \"Username\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          placeholder: \"Password\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n\n_s(LoginForm, \"PTOFrLa9/gyeDQzmmOrYE8XkOPY=\", false, function () {\n  return [useNavigate];\n});\n\n_c = LoginForm;\nexport default LoginForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"sources":["C:/Users/Faisal/Desktop/fullstack Projects/Diary Software/my-frontend/src/LoginForm.jsx"],"names":["React","useState","useNavigate","LoginForm","onLogin","username","setUsername","password","setPassword","showAlert","setShowAlert","navigate","handleSubmit","event","preventDefault","storedUsername","process","env","REACT_APP_USERNAME","storedPassword","REACT_APP_PASSWORD","setTimeout","e","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,OAAO,iBAAP,C,CAA0B;;;;AAE1B,SAASC,SAAT,OAAgC;AAAA;;AAAA,MAAb;AAAEC,IAAAA;AAAF,GAAa;AAC9B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACM,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACQ,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAMU,QAAQ,GAAGT,WAAW,EAA5B;;AAEA,QAAMU,YAAY,GAAIC,KAAD,IAAW;AAC9BA,IAAAA,KAAK,CAACC,cAAN;AACA,UAAMC,cAAc,GAAGC,OAAO,CAACC,GAAR,CAAYC,kBAAnC;AACA,UAAMC,cAAc,GAAGH,OAAO,CAACC,GAAR,CAAYG,kBAAnC;;AACA,QAAIf,QAAQ,KAAKU,cAAb,IAA+BR,QAAQ,KAAKY,cAAhD,EAAgE;AAC9Df,MAAAA,OAAO;AACPO,MAAAA,QAAQ,CAAC,GAAD,CAAR;AACD,KAHD,MAGO;AACLD,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACAW,MAAAA,UAAU,CAAC,MAAMX,YAAY,CAAC,KAAD,CAAnB,EAA4B,IAA5B,CAAV,CAFK,CAEwC;AAC9C;AACF,GAXD;;AAaA,sBACE;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,oBAEE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,iBACGD,SAAS,iBACR;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAME;AAAM,QAAA,QAAQ,EAAEG,YAAhB;AAA8B,QAAA,SAAS,EAAC,YAAxC;AAAA,gCACE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,KAAK,EAAEP,QAFT;AAGE,UAAA,QAAQ,EAAGiB,CAAD,IAAOhB,WAAW,CAACgB,CAAC,CAACC,MAAF,CAASC,KAAV,CAH9B;AAIE,UAAA,WAAW,EAAC,UAJd;AAKE,UAAA,QAAQ;AALV;AAAA;AAAA;AAAA;AAAA,gBADF,eAQE;AACE,UAAA,IAAI,EAAC,UADP;AAEE,UAAA,KAAK,EAAEjB,QAFT;AAGE,UAAA,QAAQ,EAAGe,CAAD,IAAOd,WAAW,CAACc,CAAC,CAACC,MAAF,CAASC,KAAV,CAH9B;AAIE,UAAA,WAAW,EAAC,UAJd;AAKE,UAAA,QAAQ;AALV;AAAA;AAAA;AAAA;AAAA,gBARF,eAeE;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAfF;AAAA;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA6BD;;GAhDQrB,S;UAIUD,W;;;KAJVC,S;AAkDT,eAAeA,SAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './LoginForm.css'; // Make sure the path is correct\r\n\r\nfunction LoginForm({ onLogin }) {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [showAlert, setShowAlert] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const storedUsername = process.env.REACT_APP_USERNAME;\r\n    const storedPassword = process.env.REACT_APP_PASSWORD;\r\n    if (username === storedUsername && password === storedPassword) {\r\n      onLogin();\r\n      navigate('/');\r\n    } else {\r\n      setShowAlert(true);\r\n      setTimeout(() => setShowAlert(false), 3000); // Hide the alert after 3 seconds\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-form-container\">\r\n      <div className=\"background-text\">Maher Dairy Farm</div> {/* Background text */}\r\n      <div className=\"login-form-card\">\r\n        {showAlert && (\r\n          <div className=\"alert-message show\">\r\n            Incorrect username or password!\r\n          </div>\r\n        )}\r\n        <form onSubmit={handleSubmit} className=\"login-form\">\r\n          <input\r\n            type=\"text\"\r\n            value={username}\r\n            onChange={(e) => setUsername(e.target.value)}\r\n            placeholder=\"Username\"\r\n            required\r\n          />\r\n          <input\r\n            type=\"password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            placeholder=\"Password\"\r\n            required\r\n          />\r\n          <button type=\"submit\">Login</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoginForm;\r\n"]},"metadata":{},"sourceType":"module"}