{"ast":null,"code":"import _defineProperty from\"C:/Users/Faisal/Desktop/fullstack Projects/Diary Software/my-frontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";import _objectSpread from\"C:/Users/Faisal/Desktop/fullstack Projects/Diary Software/my-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _asyncToGenerator from\"C:/Users/Faisal/Desktop/fullstack Projects/Diary Software/my-frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"C:/Users/Faisal/Desktop/fullstack Projects/Diary Software/my-frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"C:\\\\Users\\\\Faisal\\\\Desktop\\\\fullstack Projects\\\\Diary Software\\\\my-frontend\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";import React,{useState,useEffect}from'react';import'./ConsumersDales.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ConsumersDales=function ConsumersDales(){var _useState=useState(''),_useState2=_slicedToArray(_useState,2),source=_useState2[0],setSource=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),quantity=_useState4[0],setQuantity=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),amount=_useState6[0],setAmount=_useState6[1];var _useState7=useState([]),_useState8=_slicedToArray(_useState7,2),expenses=_useState8[0],setExpenses=_useState8[1];var _useState9=useState(-1),_useState10=_slicedToArray(_useState9,2),editIndex=_useState10[0],setEditIndex=_useState10[1];var _useState11=useState(false),_useState12=_slicedToArray(_useState11,2),showAlert=_useState12[0],setShowAlert=_useState12[1];var _useState13=useState(null),_useState14=_slicedToArray(_useState13,2),deleteIndex=_useState14[0],setDeleteIndex=_useState14[1];var _useState15=useState({}),_useState16=_slicedToArray(_useState15,2),groupVisibility=_useState16[0],setGroupVisibility=_useState16[1];var _useState17=useState(false),_useState18=_slicedToArray(_useState17,2),globalVisibility=_useState18[0],setGlobalVisibility=_useState18[1];var _useState19=useState(false),_useState20=_slicedToArray(_useState19,2),showMonthlySales=_useState20[0],setShowMonthlySales=_useState20[1];var _useState21=useState('English'),_useState22=_slicedToArray(_useState21,2),language=_useState22[0],setLanguage=_useState22[1];// Default to English\n// Define fetchData outside of useEffect\nvar _useState23=useState(false),_useState24=_slicedToArray(_useState23,2),showModal=_useState24[0],setShowModal=_useState24[1];// You already have this for controlling the visibility of the modal\nvar _useState25=useState(''),_useState26=_slicedToArray(_useState25,2),modalMessage=_useState26[0],setModalMessage=_useState26[1];// Add this line to manage the modal message\nvar translations={English:{title:\"Consumer Sales\",date:\"Date\",name:\"Name\",quantity:\"Quantity\",pricePerKilo:\"Price per kilo\",save:\"Save\",monthlyConsumerSale:\"Monthly Consumer Sale\",overallConsumerSale:\"Overall Consumers Sale\",showAll:\"Show\",hideAll:\"Hide \",show:\"Show \",hide:\"Hide \",show1:\"Show All\",hide1:\"Hide All\",delete:\"Delete\",update:\"Update\",deletePrompt:\"Are you sure you want to delete this?\",yes:\"Yes\",no:\"No\",consumerName:\"Consumer Name\",total:\"Total\",ConsumerName:\"Enter Consumer name \",Quantity:\"Enter Milk Quantity\",price:\"Enter price per kilo \",KiloMilk:\"Kilo Milk\",kaa:\"of\",added:\"has been added\",In:\"In\",record:\"Record has been updated\"},Urdu:{title:\"صارفین کی فروخت\",date:\"تاریخ\",name:\"نام\",quantity:\"مقدار\",pricePerKilo:\"فی کلو قیمت\",save:\"محفوظ کریں\",monthlyConsumerSale:\"ماہانہ صارفین کی فروخت\",overallConsumerSale:\"کل صارفین کی فروخت\",showAll:\" دیکھیں\",hideAll:\" چھپائیں\",show:\" دیکھیں\",hide:\" چھپائیں\",show1:\"سب دیکھیں\",hide1:\"سب چھپائیں\",delete:\"حذف کریں\",update:\"اپ ڈیٹ\",deletePrompt:\"کیا آپ واقعی اس  کو حذف کرنا چاہتے ہیں؟\",yes:\"ہاں\",no:\"نہیں\",consumerName:\"صارف کا نام\",total:\"کل\",ConsumerName:\"صارف کا نام درج کریں \",Quantity:\"دودھ کی مقدار درج کریں \",price:\"فی کلو قیمت درج کریں \",KiloMilk:\"کلو دودھ\",kaa:\"کا\",added:\" شامل ہوگیا ہے\",In:\"میں\",record:\"ریکارڈ اپ ڈیٹ ہو گیا ہے\"}};var monthTranslations={January:\"جنوری\",February:\"فروری\",March:\"مارچ\",April:\"اپریل\",May:\"مئی\",June:\"جون\",July:\"جولائی\",August:\"اگست\",September:\"ستمبر\",October:\"اکتوبر\",November:\"نومبر\",December:\"دسمبر\"};var fetchData=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var response,contentType,data,processedData;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return fetch('http://localhost:3001/consumerssale',{headers:{'Accept':'application/json'// Explicitly expect JSON responses\n}});case 3:response=_context.sent;if(response.ok){_context.next=6;break;}throw new Error(\"HTTP error! status: \".concat(response.status));case 6:// Validate content type to be JSON\ncontentType=response.headers.get('content-type');if(!(!contentType||!contentType.includes('application/json'))){_context.next=9;break;}throw new Error('Expected JSON response, but received unexpected content type');case 9:_context.next=11;return response.json();case 11:data=_context.sent;processedData=data.map(function(expense){return _objectSpread(_objectSpread({},expense),{},{Quantity:parseFloat(expense.Quantity),UnitPrice:parseFloat(expense.UnitPrice),Total:expense.Total?parseFloat(expense.Total).toFixed(2):undefined});});// Log processed data for debugging\nconsole.log(\"Processed data:\",processedData);// Assuming setExpenses is a state setter from useState hook\n// Update your component's state with the processed data\nsetExpenses(processedData);_context.next=20;break;case 17:_context.prev=17;_context.t0=_context[\"catch\"](0);// Log the error and optionally handle it by setting some error state\nconsole.error('There was an error fetching the sales data:',_context.t0);// Assuming setError is a state setter for holding error information\n// setError(error.message) or similar could be used here\ncase 20:case\"end\":return _context.stop();}}},_callee,null,[[0,17]]);}));return function fetchData(){return _ref.apply(this,arguments);};}();useEffect(function(){// Now you can call fetchData inside useEffect\nfetchData();},[]);// The empty dependency array ensures this runs only on mount\n// ... rest of your component\nvar _useState27=useState(function(){var today=new Date();var day=String(today.getDate()).padStart(2,'0');var month=String(today.getMonth()+1).padStart(2,'0');//January is 0!\n//January is 0!\nvar year=today.getFullYear();return\"\".concat(year,\"-\").concat(month,\"-\").concat(day);}),_useState28=_slicedToArray(_useState27,2),date=_useState28[0],setDate=_useState28[1];var toggleMonthlySalesVisibility=function toggleMonthlySalesVisibility(){setShowMonthlySales(function(prevShow){return!prevShow;});// Toggle the visibility state\n};var toggleGroupVisibility=function toggleGroupVisibility(monthYear){setGlobalVisibility(function(prevGlobalState){if(!prevGlobalState){// If global visibility is off, ensure it stays off and don't toggle individual groups\nconsole.warn(\"Global visibility is off. Can't toggle individual group visibility.\");return prevGlobalState;}// If global visibility is on, toggle the specific month/year group\nsetGroupVisibility(function(prevGroupVisibility){return _objectSpread(_objectSpread({},prevGroupVisibility),{},_defineProperty({},monthYear,!prevGroupVisibility[monthYear]));});return prevGlobalState;// Return the unchanged global state\n});};var CustomModal=function CustomModal(_ref2){var message=_ref2.message,onClose=_ref2.onClose;return/*#__PURE__*/_jsx(\"div\",{className:\"custom-modal-overlay\",children:/*#__PURE__*/_jsx(\"div\",{className:\"custom-modal\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"custom-modal-content\",children:[/*#__PURE__*/_jsx(\"p\",{children:message}),/*#__PURE__*/_jsx(\"button\",{onClick:onClose,children:\"Close\"})]})})});};// Group expenses by month and year\nvar groupedExpenses=expenses.reduce(function(acc,expense){// Ensure the date string is in the correct format (YYYY-MM-DD)\nvar expenseDate=expense.Date;// Adjust if the API gives a different property name for the date\nvar date=new Date(expenseDate);if(isNaN(date.getTime())){console.error('Invalid date for expense:',expense);return acc;// Skip this expense if the date is invalid\n}var monthYear=\"\".concat(date.toLocaleString('default',{month:'long',year:'numeric'}));if(!acc[monthYear]){acc[monthYear]=[];}acc[monthYear].push(expense);return acc;},{});var handleSave=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(e){var expensePayload,response,expenseId,monthYear,alertMessage,_monthYear,_alertMessage;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:e.preventDefault();expensePayload={Date:date,Name:source,Quantity:parseFloat(quantity),UnitPrice:parseFloat(amount)};_context2.prev=2;if(!(editIndex>=0)){_context2.next=14;break;}// Assuming your expense objects use 'idConsumersSale' as the key for ID\nexpenseId=expenses[editIndex].idConsumersSale;// Adjust this line accordingly\n_context2.next=7;return fetch(\"http://localhost:3001/consumerssale/\".concat(expenseId),{method:'PUT',headers:{'Content-Type':'application/json'},body:JSON.stringify(expensePayload)});case 7:response=_context2.sent;monthYear=new Date(date).toLocaleString('default',{month:'long',year:'numeric'});alertMessage=\"\".concat(translations[language].record,\" \");// Replace alert(alertMessage); with:\nsetModalMessage(alertMessage);setShowModal(true);_context2.next=21;break;case 14:_context2.next=16;return fetch('http://localhost:3001/consumerssale',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(expensePayload)});case 16:response=_context2.sent;_monthYear=new Date(date).toLocaleString('default',{month:'long',year:'numeric'});_alertMessage=\"\".concat(quantity,\" \").concat(translations[language].KiloMilk,\" \").concat(translations[language].added);// Replace alert(alertMessage); with:\nsetModalMessage(_alertMessage);setShowModal(true);case 21:if(response.ok){_context2.next=23;break;}throw new Error(\"HTTP error! status: \".concat(response.status));case 23:_context2.next=25;return fetchData();case 25:// Refresh data\n// Reset form fields and editIndex\n//setDate('');\nsetSource('');setQuantity('');setAmount('');setEditIndex(-1);_context2.next=34;break;case 31:_context2.prev=31;_context2.t0=_context2[\"catch\"](2);console.error('There was an error saving the sale:',_context2.t0);case 34:case\"end\":return _context2.stop();}}},_callee2,null,[[2,31]]);}));return function handleSave(_x){return _ref3.apply(this,arguments);};}();// This function is called when the delete button is clicked.\n// It sets up the alert and marks which item should be deleted if confirmed.\nvar handleDelete=function handleDelete(index){setShowAlert(true);setDeleteIndex(index);};// This function is called when the user confirms the deletion.\nvar handleAlertConfirm=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(isConfirmed){var expense,response,result;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:if(!(isConfirmed&&deleteIndex!=null)){_context3.next=23;break;}expense=expenses[deleteIndex];if(!(expense&&expense.idConsumersSale)){_context3.next=22;break;}_context3.prev=3;_context3.next=6;return fetch(\"http://localhost:3001/consumerssale/\".concat(expense.idConsumersSale),{method:'DELETE',headers:{'Content-Type':'application/json'}});case 6:response=_context3.sent;if(response.ok){_context3.next=9;break;}throw new Error(\"HTTP error! status: \".concat(response.status));case 9:_context3.next=11;return response.json();case 11:result=_context3.sent;console.log(result.message);// Log the message from the backend\n// Refresh the expenses list after deleting an expense\n_context3.next=15;return fetchData();case 15:_context3.next=20;break;case 17:_context3.prev=17;_context3.t0=_context3[\"catch\"](3);console.error('There was an error deleting the sale:',_context3.t0);case 20:_context3.next=23;break;case 22:console.error('Attempted to delete an expense without a valid ID');case 23:// Reset the state regardless of whether the delete was successful or not\nsetDeleteIndex(null);setShowAlert(false);case 25:case\"end\":return _context3.stop();}}},_callee3,null,[[3,17]]);}));return function handleAlertConfirm(_x2){return _ref4.apply(this,arguments);};}();var getMonthlyExpenses=function getMonthlyExpenses(){var monthlyExpenses=expenses.reduce(function(acc,expense){// Check if the date is valid\nvar date=new Date(expense.Date);if(isNaN(date.getTime())){console.error('Invalid date for expense:',expense);return acc;// Skip this expense if the date is invalid\n}var monthYear=\"\".concat(date.toLocaleString('default',{month:'long'}),\" \").concat(date.getFullYear());var expenseQuantity=parseFloat(expense.Quantity);var expenseUnitPrice=parseFloat(expense.UnitPrice);var monthlyTotal=!isNaN(expenseQuantity)&&!isNaN(expenseUnitPrice)?expenseQuantity*expenseUnitPrice:0;if(!acc[monthYear]){acc[monthYear]=0;}acc[monthYear]+=monthlyTotal;return acc;},{});return monthlyExpenses;};var getOverallExpenses=function getOverallExpenses(){return expenses.reduce(function(acc,expense){var expenseQuantity=parseFloat(expense.Quantity);var expenseUnitPrice=parseFloat(expense.UnitPrice);var total=expenseQuantity&&expenseUnitPrice?expenseQuantity*expenseUnitPrice:0;return acc+total;},0);};var handleUpdate=function handleUpdate(index){var expense=expenses[index];// Adjust these property names to match your actual expense object structure\nsetDate(expense.Date);// Assuming the date property is named \"Date\"\nsetSource(expense.Name);// Assuming the consumer name property is named \"Name\"\nsetQuantity(expense.Quantity.toString());// Assuming the quantity property is named \"Quantity\"\nsetAmount(expense.UnitPrice.toString());// Assuming the unit price property is named \"UnitPrice\"\nsetEditIndex(index);};var toggleGlobalVisibility=function toggleGlobalVisibility(){setGlobalVisibility(function(prevState){var newState=!prevState;// Update all group visibilities based on the new global state\nvar newGroupVisibility=Object.keys(groupVisibility).reduce(function(acc,key){acc[key]=newState;// Show or hide all based on the new global state\nreturn acc;},{});setGroupVisibility(newGroupVisibility);return newState;});};return/*#__PURE__*/_jsxs(\"div\",{className:\"expenditure-container\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"expenditure-title\",children:translations[language].title}),/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return setLanguage(function(lang){return lang==='English'?'Urdu':'English';});},className:\"language-toggle\",children:language==='English'?'اردو':'English'}),/*#__PURE__*/_jsxs(\"form\",{className:\"expenditure-form\",onSubmit:handleSave,children:[/*#__PURE__*/_jsxs(\"label\",{htmlFor:\"date\",className:\"expenditure-label\",children:[translations[language].date,\":\"]}),/*#__PURE__*/_jsx(\"input\",{type:\"date\",id:\"date\",value:date,onChange:function onChange(e){return setDate(e.target.value);},className:\"expenditure-input date-input\",required:true}),/*#__PURE__*/_jsxs(\"label\",{htmlFor:\"source\",className:\"expenditure-label\",children:[translations[language].name,\":\"]}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"source\",value:source,onChange:function onChange(e){return setSource(e.target.value);},className:\"expenditure-input\",placeholder:translations[language].ConsumerName,required:true}),/*#__PURE__*/_jsxs(\"label\",{htmlFor:\"quantity\",className:\"expenditure-label\",children:[translations[language].quantity,\":\"]}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",id:\"quantity\",value:quantity,onChange:function onChange(e){return setQuantity(e.target.value);},className:\"expenditure-input\",placeholder:translations[language].Quantity,required:true}),/*#__PURE__*/_jsxs(\"label\",{htmlFor:\"amount\",className:\"expenditure-label\",children:[translations[language].pricePerKilo,\":\"]}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",id:\"amount\",value:amount,onChange:function onChange(e){return setAmount(e.target.value);},className:\"expenditure-input\",placeholder:translations[language].price,required:true}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"save-button\",children:translations[language].save})]}),showModal&&/*#__PURE__*/_jsx(CustomModal,{message:modalMessage,onClose:function onClose(){return setShowModal(false);}}),/*#__PURE__*/_jsxs(\"div\",{className:\"expenses-report\",children:[/*#__PURE__*/_jsxs(\"h4\",{children:[translations[language].monthlyConsumerSale,\":\"]}),/*#__PURE__*/_jsx(\"button\",{onClick:toggleMonthlySalesVisibility,className:\"toggle-all-button\",children:showMonthlySales?translations[language].hideAll:translations[language].showAll}),showMonthlySales&&Object.entries(getMonthlyExpenses()).map(function(_ref5){var _ref6=_slicedToArray(_ref5,2),monthYear=_ref6[0],total=_ref6[1];// Split month and year\nvar _monthYear$split=monthYear.split(' '),_monthYear$split2=_slicedToArray(_monthYear$split,2),month=_monthYear$split2[0],year=_monthYear$split2[1];// Translate the month name if available, otherwise, use the original name\nvar translatedMonth=language==='Urdu'?monthTranslations[month]||month:month;// Combine translated month and year\nvar translatedMonthYear=\"\".concat(translatedMonth,\" \").concat(year);return/*#__PURE__*/_jsxs(\"div\",{style:{color:'green'},children:[translations[language].monthlySales,\" \",translatedMonthYear,\" : \",total]},monthYear);}),/*#__PURE__*/_jsxs(\"h4\",{children:[translations[language].overallConsumerSale,\":\",/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"span\",{style:{color:'green'},children:getOverallExpenses()})]})]}),/*#__PURE__*/_jsx(\"button\",{onClick:toggleGlobalVisibility,className:\"global-toggle-button\",children:globalVisibility?translations[language].hide1:translations[language].show1}),globalVisibility&&Object.entries(groupedExpenses).map(function(_ref7){var _ref8=_slicedToArray(_ref7,2),monthYear=_ref8[0],expensesList=_ref8[1];return(// Your existing map function\nfunction(){// Move the statements outside of JSX\nvar monthYearArray=monthYear.split(' ');var month=monthYearArray[0];var year=monthYearArray[1];// Translate the month name if the current language is Urdu\nvar translatedMonthName=language==='Urdu'?monthTranslations[month]||month:month;// Reconstruct the monthYear string with the possibly translated month name\nvar displayMonthYear=\"\".concat(translatedMonthName,\" \").concat(year);return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"h3\",{style:{marginTop:15},children:[displayMonthYear,/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return toggleGroupVisibility(monthYear);},className:\"toggle-button\",children:groupVisibility[monthYear]?translations[language].hide:translations[language].show})]}),groupVisibility[monthYear]&&/*#__PURE__*/_jsx(\"div\",{className:\"expenses-display\",children:expensesList.map(function(expense,index){var actualIndex=expenses.findIndex(function(e){return e===expense;});var total=!isNaN(expense.Quantity)&&!isNaN(expense.UnitPrice)?(expense.Quantity*expense.UnitPrice).toFixed(2):'N/A';return/*#__PURE__*/_jsxs(\"div\",{className:\"expense-card\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[translations[language].date,\": \",expense.Date]}),/*#__PURE__*/_jsxs(\"div\",{children:[translations[language].consumerName,\": \",expense.Name]}),/*#__PURE__*/_jsxs(\"div\",{children:[translations[language].quantity,\": \",Number.isFinite(expense.Quantity)?expense.Quantity:'N/A']}),/*#__PURE__*/_jsxs(\"div\",{children:[translations[language].pricePerKilo,\": \",Number.isFinite(expense.UnitPrice)?expense.UnitPrice:'N/A']}),/*#__PURE__*/_jsxs(\"div\",{children:[translations[language].total,\": \",expense.Total]}),/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return handleDelete(actualIndex);},className:\"delete-button1\",children:translations[language].delete}),/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return handleUpdate(actualIndex);},className:\"update-button\",children:translations[language].update})]},index);})})]},monthYear);}());}),showAlert&&/*#__PURE__*/_jsxs(\"div\",{className:\"alert-dialog\",children:[/*#__PURE__*/_jsx(\"p\",{children:translations[language].deletePrompt}),/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return handleAlertConfirm(true);},className:\"confirm-yes\",children:translations[language].yes}),/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return handleAlertConfirm(false);},className:\"confirm-no\",children:translations[language].no})]})]});};export default ConsumersDales;","map":{"version":3,"sources":["C:/Users/Faisal/Desktop/fullstack Projects/Diary Software/my-frontend/src/ConsumersDales.jsx"],"names":["React","useState","useEffect","ConsumersDales","source","setSource","quantity","setQuantity","amount","setAmount","expenses","setExpenses","editIndex","setEditIndex","showAlert","setShowAlert","deleteIndex","setDeleteIndex","groupVisibility","setGroupVisibility","globalVisibility","setGlobalVisibility","showMonthlySales","setShowMonthlySales","language","setLanguage","showModal","setShowModal","modalMessage","setModalMessage","translations","English","title","date","name","pricePerKilo","save","monthlyConsumerSale","overallConsumerSale","showAll","hideAll","show","hide","show1","hide1","delete","update","deletePrompt","yes","no","consumerName","total","ConsumerName","Quantity","price","KiloMilk","kaa","added","In","record","Urdu","monthTranslations","January","February","March","April","May","June","July","August","September","October","November","December","fetchData","fetch","headers","response","ok","Error","status","contentType","get","includes","json","data","processedData","map","expense","parseFloat","UnitPrice","Total","toFixed","undefined","console","log","error","today","Date","day","String","getDate","padStart","month","getMonth","year","getFullYear","setDate","toggleMonthlySalesVisibility","prevShow","toggleGroupVisibility","monthYear","prevGlobalState","warn","prevGroupVisibility","CustomModal","message","onClose","groupedExpenses","reduce","acc","expenseDate","isNaN","getTime","toLocaleString","push","handleSave","e","preventDefault","expensePayload","Name","expenseId","idConsumersSale","method","body","JSON","stringify","alertMessage","handleDelete","index","handleAlertConfirm","isConfirmed","result","getMonthlyExpenses","monthlyExpenses","expenseQuantity","expenseUnitPrice","monthlyTotal","getOverallExpenses","handleUpdate","toString","toggleGlobalVisibility","prevState","newState","newGroupVisibility","Object","keys","key","lang","target","value","entries","split","translatedMonth","translatedMonthYear","color","monthlySales","expensesList","monthYearArray","translatedMonthName","displayMonthYear","marginTop","actualIndex","findIndex","Number","isFinite"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './ConsumersDales.css';\r\n\r\nconst ConsumersDales = () => {\r\n\r\n  const [source, setSource] = useState('');\r\n  const [quantity, setQuantity] = useState('');\r\n  const [amount, setAmount] = useState('');\r\n  const [expenses, setExpenses] = useState([]);\r\n  const [editIndex, setEditIndex] = useState(-1);\r\n  const [showAlert, setShowAlert] = useState(false);\r\n  const [deleteIndex, setDeleteIndex] = useState(null);\r\n  const [groupVisibility, setGroupVisibility] = useState({});\r\n  const [globalVisibility, setGlobalVisibility] = useState(false);\r\n  const [showMonthlySales, setShowMonthlySales] = useState(false);\r\n  const [language, setLanguage] = useState('English'); // Default to English\r\n  // Define fetchData outside of useEffect\r\n  const [showModal, setShowModal] = useState(false); // You already have this for controlling the visibility of the modal\r\n  const [modalMessage, setModalMessage] = useState(''); // Add this line to manage the modal message\r\n\r\n  const translations = {\r\n    English: {\r\n      title: \"Consumer Sales\",\r\n      date: \"Date\",\r\n      name: \"Name\",\r\n      quantity: \"Quantity\",\r\n      pricePerKilo: \"Price per kilo\",\r\n      save: \"Save\",\r\n      monthlyConsumerSale: \"Monthly Consumer Sale\",\r\n      overallConsumerSale: \"Overall Consumers Sale\",\r\n      showAll: \"Show\",\r\n      hideAll: \"Hide \",\r\n      show: \"Show \",\r\n      hide: \"Hide \",\r\n      show1: \"Show All\",\r\n      hide1: \"Hide All\",\r\n      delete: \"Delete\",\r\n      update: \"Update\",\r\n      deletePrompt: \"Are you sure you want to delete this?\",\r\n      yes: \"Yes\",\r\n      no: \"No\",\r\n      consumerName: \"Consumer Name\",\r\n      total: \"Total\",\r\n      ConsumerName: \"Enter Consumer name \",\r\n      Quantity: \"Enter Milk Quantity\",\r\n      price: \"Enter price per kilo \",\r\n      KiloMilk: \"Kilo Milk\",\r\n      kaa: \"of\",\r\n      added: \"has been added\",\r\n      In: \"In\",\r\n      record: \"Record has been updated\",\r\n    },\r\n    Urdu: {\r\n      title: \"صارفین کی فروخت\",\r\n      date: \"تاریخ\",\r\n      name: \"نام\",\r\n      quantity: \"مقدار\",\r\n      pricePerKilo: \"فی کلو قیمت\",\r\n      save: \"محفوظ کریں\",\r\n      monthlyConsumerSale: \"ماہانہ صارفین کی فروخت\",\r\n      overallConsumerSale: \"کل صارفین کی فروخت\",\r\n      showAll: \" دیکھیں\",\r\n      hideAll: \" چھپائیں\",\r\n      show: \" دیکھیں\",\r\n      hide: \" چھپائیں\",\r\n      show1: \"سب دیکھیں\",\r\n      hide1: \"سب چھپائیں\",\r\n      delete: \"حذف کریں\",\r\n      update: \"اپ ڈیٹ\",\r\n      deletePrompt: \"کیا آپ واقعی اس  کو حذف کرنا چاہتے ہیں؟\",\r\n      yes: \"ہاں\",\r\n      no: \"نہیں\",\r\n      consumerName: \"صارف کا نام\",\r\n      total: \"کل\",\r\n      ConsumerName: \"صارف کا نام درج کریں \",\r\n      Quantity: \"دودھ کی مقدار درج کریں \",\r\n      price: \"فی کلو قیمت درج کریں \",\r\n      KiloMilk: \"کلو دودھ\",\r\n      kaa: \"کا\",\r\n      added: \" شامل ہوگیا ہے\",\r\n      In: \"میں\",\r\n      record: \"ریکارڈ اپ ڈیٹ ہو گیا ہے\",\r\n    }\r\n  };\r\n\r\n  const monthTranslations = {\r\n    January: \"جنوری\",\r\n    February: \"فروری\",\r\n    March: \"مارچ\",\r\n    April: \"اپریل\",\r\n    May: \"مئی\",\r\n    June: \"جون\",\r\n    July: \"جولائی\",\r\n    August: \"اگست\",\r\n    September: \"ستمبر\",\r\n    October: \"اکتوبر\",\r\n    November: \"نومبر\",\r\n    December: \"دسمبر\",\r\n  };\r\n\r\n  const fetchData = async () => {\r\n    try {\r\n        // Updated fetch request with explicit Accept header for JSON responses\r\n        const response = await fetch('http://localhost:3001/consumerssale', {\r\n            headers: {\r\n                'Accept': 'application/json', // Explicitly expect JSON responses\r\n            },\r\n        });\r\n\r\n        // Check if the response was successful\r\n        if (!response.ok) {\r\n            throw new Error(`HTTP error! status: ${response.status}`);\r\n        }\r\n\r\n        // Validate content type to be JSON\r\n        const contentType = response.headers.get('content-type');\r\n        if (!contentType || !contentType.includes('application/json')) {\r\n            throw new Error('Expected JSON response, but received unexpected content type');\r\n        }\r\n\r\n        // Parse the JSON response and process data\r\n        const data = await response.json();\r\n        const processedData = data.map(expense => ({\r\n            ...expense,\r\n            Quantity: parseFloat(expense.Quantity),\r\n            UnitPrice: parseFloat(expense.UnitPrice),\r\n            Total: expense.Total ? parseFloat(expense.Total).toFixed(2) : undefined,\r\n        }));\r\n\r\n        // Log processed data for debugging\r\n        console.log(\"Processed data:\", processedData);\r\n\r\n        // Assuming setExpenses is a state setter from useState hook\r\n        // Update your component's state with the processed data\r\n        setExpenses(processedData);\r\n    } catch (error) {\r\n        // Log the error and optionally handle it by setting some error state\r\n        console.error('There was an error fetching the sales data:', error);\r\n\r\n        // Assuming setError is a state setter for holding error information\r\n        // setError(error.message) or similar could be used here\r\n    }\r\n};\r\n\r\n\r\n  useEffect(() => {\r\n    // Now you can call fetchData inside useEffect\r\n    fetchData();\r\n  }, []); // The empty dependency array ensures this runs only on mount\r\n\r\n  // ... rest of your component\r\n\r\n\r\n  const [date, setDate] = useState(() => {\r\n    const today = new Date();\r\n    const day = String(today.getDate()).padStart(2, '0');\r\n    const month = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\r\n    const year = today.getFullYear();\r\n\r\n    return `${year}-${month}-${day}`;\r\n  });\r\n  const toggleMonthlySalesVisibility = () => {\r\n    setShowMonthlySales(prevShow => !prevShow); // Toggle the visibility state\r\n  };\r\n\r\n  const toggleGroupVisibility = (monthYear) => {\r\n    setGlobalVisibility(prevGlobalState => {\r\n      if (!prevGlobalState) {\r\n        // If global visibility is off, ensure it stays off and don't toggle individual groups\r\n        console.warn(\"Global visibility is off. Can't toggle individual group visibility.\");\r\n        return prevGlobalState;\r\n      }\r\n\r\n      // If global visibility is on, toggle the specific month/year group\r\n      setGroupVisibility(prevGroupVisibility => ({\r\n        ...prevGroupVisibility,\r\n        [monthYear]: !prevGroupVisibility[monthYear]\r\n      }));\r\n\r\n      return prevGlobalState; // Return the unchanged global state\r\n    });\r\n  };\r\n  const CustomModal = ({ message, onClose }) => {\r\n    return (\r\n      <div className=\"custom-modal-overlay\">\r\n        <div className=\"custom-modal\">\r\n          <div className=\"custom-modal-content\">\r\n            <p>{message}</p>\r\n            <button onClick={onClose}>Close</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  // Group expenses by month and year\r\n  const groupedExpenses = expenses.reduce((acc, expense) => {\r\n    // Ensure the date string is in the correct format (YYYY-MM-DD)\r\n    const expenseDate = expense.Date; // Adjust if the API gives a different property name for the date\r\n    const date = new Date(expenseDate);\r\n\r\n    if (isNaN(date.getTime())) {\r\n      console.error('Invalid date for expense:', expense);\r\n      return acc; // Skip this expense if the date is invalid\r\n    }\r\n\r\n    const monthYear = `${date.toLocaleString('default', { month: 'long', year: 'numeric' })}`;\r\n    if (!acc[monthYear]) {\r\n      acc[monthYear] = [];\r\n    }\r\n    acc[monthYear].push(expense);\r\n\r\n    return acc;\r\n  }, {});\r\n\r\n  const handleSave = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const expensePayload = {\r\n      Date: date,\r\n      Name: source,\r\n      Quantity: parseFloat(quantity),\r\n      UnitPrice: parseFloat(amount),\r\n    };\r\n\r\n    try {\r\n      let response;\r\n      if (editIndex >= 0) {\r\n        // Assuming your expense objects use 'idConsumersSale' as the key for ID\r\n        const expenseId = expenses[editIndex].idConsumersSale; // Adjust this line accordingly\r\n        response = await fetch(`http://localhost:3001/consumerssale/${expenseId}`, {\r\n          method: 'PUT',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify(expensePayload),\r\n        });\r\n\r\n        const monthYear = new Date(date).toLocaleString('default', { month: 'long', year: 'numeric' });\r\n        const alertMessage = `${translations[language].record} `;\r\n\r\n        // Replace alert(alertMessage); with:\r\n        setModalMessage(alertMessage);\r\n        setShowModal(true);\r\n\r\n      } else {\r\n        // Adding a new expense\r\n        response = await fetch('http://localhost:3001/consumerssale', {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify(expensePayload),\r\n        });\r\n\r\n        const monthYear = new Date(date).toLocaleString('default', { month: 'long', year: 'numeric' });\r\n        const alertMessage = `${quantity} ${translations[language].KiloMilk} ${translations[language].added}`;\r\n        // Replace alert(alertMessage); with:\r\n        setModalMessage(alertMessage);\r\n        setShowModal(true);\r\n      }\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! status: ${response.status}`);\r\n      }\r\n\r\n      await fetchData(); // Refresh data\r\n\r\n      // Reset form fields and editIndex\r\n      //setDate('');\r\n      setSource('');\r\n      setQuantity('');\r\n      setAmount('');\r\n      setEditIndex(-1);\r\n\r\n\r\n    } catch (error) {\r\n      console.error('There was an error saving the sale:', error);\r\n    }\r\n  };\r\n\r\n  // This function is called when the delete button is clicked.\r\n  // It sets up the alert and marks which item should be deleted if confirmed.\r\n  const handleDelete = (index) => {\r\n    setShowAlert(true);\r\n    setDeleteIndex(index);\r\n  };\r\n\r\n  // This function is called when the user confirms the deletion.\r\n  const handleAlertConfirm = async (isConfirmed) => {\r\n    if (isConfirmed && deleteIndex != null) {\r\n      const expense = expenses[deleteIndex];\r\n      if (expense && expense.idConsumersSale) { // Make sure the ID field matches your data structure\r\n        try {\r\n          const response = await fetch(`http://localhost:3001/consumerssale/${expense.idConsumersSale}`, {\r\n            method: 'DELETE',\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n            },\r\n          });\r\n\r\n          if (!response.ok) {\r\n            throw new Error(`HTTP error! status: ${response.status}`);\r\n          }\r\n\r\n          const result = await response.json();\r\n          console.log(result.message); // Log the message from the backend\r\n\r\n          // Refresh the expenses list after deleting an expense\r\n          await fetchData();\r\n\r\n        } catch (error) {\r\n          console.error('There was an error deleting the sale:', error);\r\n        }\r\n      } else {\r\n        console.error('Attempted to delete an expense without a valid ID');\r\n      }\r\n    }\r\n\r\n    // Reset the state regardless of whether the delete was successful or not\r\n    setDeleteIndex(null);\r\n    setShowAlert(false);\r\n  };\r\n\r\n\r\n  const getMonthlyExpenses = () => {\r\n    const monthlyExpenses = expenses.reduce((acc, expense) => {\r\n      // Check if the date is valid\r\n      const date = new Date(expense.Date);\r\n      if (isNaN(date.getTime())) {\r\n        console.error('Invalid date for expense:', expense);\r\n        return acc; // Skip this expense if the date is invalid\r\n      }\r\n\r\n      const monthYear = `${date.toLocaleString('default', { month: 'long' })} ${date.getFullYear()}`;\r\n      const expenseQuantity = parseFloat(expense.Quantity);\r\n      const expenseUnitPrice = parseFloat(expense.UnitPrice);\r\n      const monthlyTotal = !isNaN(expenseQuantity) && !isNaN(expenseUnitPrice) ? expenseQuantity * expenseUnitPrice : 0;\r\n\r\n      if (!acc[monthYear]) {\r\n        acc[monthYear] = 0;\r\n      }\r\n\r\n      acc[monthYear] += monthlyTotal;\r\n\r\n      return acc;\r\n    }, {});\r\n\r\n    return monthlyExpenses;\r\n  };\r\n\r\n\r\n  const getOverallExpenses = () => {\r\n    return expenses.reduce((acc, expense) => {\r\n      const expenseQuantity = parseFloat(expense.Quantity);\r\n      const expenseUnitPrice = parseFloat(expense.UnitPrice);\r\n      const total = expenseQuantity && expenseUnitPrice ? expenseQuantity * expenseUnitPrice : 0;\r\n      return acc + total;\r\n    }, 0);\r\n  };\r\n\r\n  const handleUpdate = (index) => {\r\n    const expense = expenses[index];\r\n    // Adjust these property names to match your actual expense object structure\r\n    setDate(expense.Date); // Assuming the date property is named \"Date\"\r\n    setSource(expense.Name); // Assuming the consumer name property is named \"Name\"\r\n    setQuantity(expense.Quantity.toString()); // Assuming the quantity property is named \"Quantity\"\r\n    setAmount(expense.UnitPrice.toString()); // Assuming the unit price property is named \"UnitPrice\"\r\n    setEditIndex(index);\r\n  };\r\n  const toggleGlobalVisibility = () => {\r\n    setGlobalVisibility(prevState => {\r\n      const newState = !prevState;\r\n      // Update all group visibilities based on the new global state\r\n      const newGroupVisibility = Object.keys(groupVisibility).reduce((acc, key) => {\r\n        acc[key] = newState; // Show or hide all based on the new global state\r\n        return acc;\r\n      }, {});\r\n\r\n      setGroupVisibility(newGroupVisibility);\r\n      return newState;\r\n    });\r\n  };\r\n\r\n\r\n  return (\r\n    <div className=\"expenditure-container\">\r\n      <h1 className=\"expenditure-title\">{translations[language].title}</h1>\r\n      <button onClick={() => setLanguage(lang => lang === 'English' ? 'Urdu' : 'English')} className=\"language-toggle\">\r\n        {language === 'English' ? 'اردو' : 'English'}\r\n      </button>\r\n      <form className=\"expenditure-form\" onSubmit={handleSave}>\r\n        <label htmlFor=\"date\" className=\"expenditure-label\">{translations[language].date}:</label>\r\n        <input\r\n          type=\"date\"\r\n          id=\"date\"\r\n          value={date}\r\n          onChange={(e) => setDate(e.target.value)}\r\n          className=\"expenditure-input date-input\"\r\n          required\r\n        />\r\n\r\n        <label htmlFor=\"source\" className=\"expenditure-label\">{translations[language].name}:</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"source\"\r\n          value={source}\r\n          onChange={(e) => setSource(e.target.value)}\r\n          className=\"expenditure-input\"\r\n          placeholder={translations[language].ConsumerName}\r\n          required\r\n        />\r\n\r\n        <label htmlFor=\"quantity\" className=\"expenditure-label\">{translations[language].quantity}:</label>\r\n        <input\r\n          type=\"number\"\r\n          id=\"quantity\"\r\n          value={quantity}\r\n          onChange={(e) => setQuantity(e.target.value)}\r\n          className=\"expenditure-input\"\r\n          placeholder={translations[language].Quantity}\r\n          required\r\n        />\r\n\r\n        <label htmlFor=\"amount\" className=\"expenditure-label\">{translations[language].pricePerKilo}:</label>\r\n        <input\r\n          type=\"number\"\r\n          id=\"amount\"\r\n          value={amount}\r\n          onChange={(e) => setAmount(e.target.value)}\r\n          className=\"expenditure-input\"\r\n          placeholder={translations[language].price}\r\n          required\r\n        />\r\n\r\n        <button type=\"submit\" className=\"save-button\">{translations[language].save}</button>\r\n      </form>\r\n      {showModal && (\r\n        <CustomModal\r\n          message={modalMessage}\r\n          onClose={() => setShowModal(false)}\r\n        />\r\n      )}\r\n      <div className=\"expenses-report\">\r\n        <h4>{translations[language].monthlyConsumerSale}:</h4>\r\n\r\n        <button onClick={toggleMonthlySalesVisibility} className=\"toggle-all-button\">\r\n          {showMonthlySales ? translations[language].hideAll : translations[language].showAll}\r\n        </button>\r\n\r\n        {showMonthlySales && Object.entries(getMonthlyExpenses()).map(([monthYear, total]) => {\r\n          // Split month and year\r\n          const [month, year] = monthYear.split(' ');\r\n\r\n          // Translate the month name if available, otherwise, use the original name\r\n          const translatedMonth = language === 'Urdu' ? monthTranslations[month] || month : month;\r\n\r\n          // Combine translated month and year\r\n          const translatedMonthYear = `${translatedMonth} ${year}`;\r\n\r\n          return (\r\n            <div key={monthYear} style={{ color: 'green' }}>\r\n              {translations[language].monthlySales} {translatedMonthYear} : {total}\r\n            </div>\r\n          );\r\n        })}\r\n\r\n\r\n        <h4>{translations[language].overallConsumerSale}:<br /><span style={{ color: 'green' }}>{getOverallExpenses()}</span></h4>\r\n      </div>\r\n      <button onClick={toggleGlobalVisibility} className=\"global-toggle-button\">\r\n        {globalVisibility ? translations[language].hide1 : translations[language].show1}\r\n      </button>\r\n\r\n      {globalVisibility && Object.entries(groupedExpenses).map(([monthYear, expensesList]) => (\r\n        // Your existing map function\r\n        (() => {\r\n          // Move the statements outside of JSX\r\n          const monthYearArray = monthYear.split(' ');\r\n          const month = monthYearArray[0];\r\n          const year = monthYearArray[1];\r\n\r\n          // Translate the month name if the current language is Urdu\r\n          const translatedMonthName = language === 'Urdu' ? (monthTranslations[month] || month) : month;\r\n\r\n          // Reconstruct the monthYear string with the possibly translated month name\r\n          const displayMonthYear = `${translatedMonthName} ${year}`;\r\n\r\n          return (\r\n            <div key={monthYear}>\r\n              <h3 style={{ marginTop: 15 }}>\r\n                {displayMonthYear}\r\n                <button\r\n                  onClick={() => toggleGroupVisibility(monthYear)}\r\n                  className=\"toggle-button\"\r\n                >\r\n                  {groupVisibility[monthYear] ? translations[language].hide : translations[language].show}\r\n                </button>\r\n              </h3>\r\n              {groupVisibility[monthYear] && (\r\n                <div className=\"expenses-display\">\r\n                  {expensesList.map((expense, index) => {\r\n                    const actualIndex = expenses.findIndex(e => e === expense);\r\n                    const total = (!isNaN(expense.Quantity) && !isNaN(expense.UnitPrice))\r\n                      ? (expense.Quantity * expense.UnitPrice).toFixed(2)\r\n                      : 'N/A';\r\n                    return (\r\n                      <div key={index} className=\"expense-card\">\r\n                        <div>{translations[language].date}: {expense.Date}</div>\r\n                        <div>{translations[language].consumerName}: {expense.Name}</div>\r\n                        <div>{translations[language].quantity}: {Number.isFinite(expense.Quantity) ? expense.Quantity : 'N/A'}</div>\r\n                        <div>{translations[language].pricePerKilo}: {Number.isFinite(expense.UnitPrice) ? expense.UnitPrice : 'N/A'}</div>\r\n                        <div>{translations[language].total}: {expense.Total}</div>\r\n\r\n                        <button onClick={() => handleDelete(actualIndex)} className=\"delete-button1\">{translations[language].delete}</button>\r\n                        <button onClick={() => handleUpdate(actualIndex)} className=\"update-button\">{translations[language].update}</button>\r\n                      </div>\r\n                    );\r\n                  })}\r\n                </div>\r\n              )}\r\n            </div>\r\n          );\r\n        })()\r\n      ))}\r\n\r\n      {showAlert && (\r\n        <div className=\"alert-dialog\">\r\n          <p>{translations[language].deletePrompt}</p>\r\n          <button onClick={() => handleAlertConfirm(true)} className=\"confirm-yes\">{translations[language].yes}</button>\r\n          <button onClick={() => handleAlertConfirm(false)} className=\"confirm-no\" >{translations[language].no}</button>\r\n        </div>\r\n      )}\r\n\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\nexport default ConsumersDales;\r\n"]},"metadata":{},"sourceType":"module"}